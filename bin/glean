#!/usr/bin/env ruby
require 'gli'
require 'glean'
require 'base64'

include GLI::App

program_desc 'A data management tool for humans'

version Glean::VERSION

desc 'Download a dataset by name'
arg_name 'dataset_identifier'
command :get do |c|
  c.action do |global_options,options,args|
    dataset = Glean::Dataset.new(args[0])
  end
end

desc 'Describe out here'
arg_name 'Describe arguments to out here'
command :out do |c|
  c.action do |global_options,options,args|
    dataset = Glean::Dataset.new(args[0])
    dataset.each_datum do |datum|
      puts datum
    end
  end
end

desc 'Show information'
arg_name 'dataset_identifier'
command :info do |c|
  c.action do |global_options,options,args|
    begin
      readme = Octokit.readme("glean/#{args[0]}")
      puts Base64.decode64(readme.content)
    rescue
      puts "No extended information available"
    end
  end
end

desc 'Search for datasets'
arg_name 'dataset_identifier'
command :search do |c|
  c.action do |global_options,options,args|
    Octokit.organization_repositories('glean').each do |repo|
      puts "#{repo.name} -- #{repo.description}" unless repo.name =~ /^glean.*$/
    end
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
